{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["TodoForm","props","useState","edit","value","input","setInput","inputRef","useRef","useEffect","current","focus","handleTaskInputChange","e","target","onSubmit","preventDefault","id","Math","floor","random","text","style","display","name","type","className","onChange","placeholder","ref","fontSize","color","Todo","todos","completeTodo","removeTodo","updateTodo","setEdit","map","todo","index","isComplete","alignItems","cursor","onClick","padding","margin","TodoList","setTodos","test","newTodos","updatedTodos","removeArr","filter","todoId","newValue","prev","item","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.57dc3415.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\r\nimport { GrFormAdd } from 'react-icons/gr'\r\nimport { FaPen } from 'react-icons/fa'\r\n\r\nfunction TodoForm(props) {\r\n    const [input, setInput] = useState(props.edit ? props.edit.value : '');\r\n\r\n    const inputRef = useRef(null)\r\n\r\n    useEffect(() => {\r\n        inputRef.current.focus()\r\n    })\r\n\r\n    const handleTaskInputChange = e => {\r\n        setInput(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        props.onSubmit({\r\n            id: Math.floor(Math.random() * 1000),\r\n            text: input\r\n        });\r\n        setInput('')\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} style={{display: \"flex\"}}>\r\n            {props.edit ? ( \r\n            <>\r\n            <input \r\n          name=\"task\"\r\n          type=\"text\"\r\n          className=\"todo__input\"\r\n          value={input}\r\n          onChange={handleTaskInputChange}\r\n          placeholder=\"Edit Your Todo\"\r\n          ref={inputRef}\r\n        />\r\n           \r\n        <button type=\"submit\" className=\"addButton\"><FaPen style={{ fontSize: \"1.4rem\", color: \"grey\"}}/></button>\r\n                </>\r\n\r\n          ) : (<>\r\n          <input \r\n            name=\"task\"\r\n            type=\"text\"\r\n            className=\"todo__input\"\r\n            value={input}\r\n            onChange={handleTaskInputChange}\r\n            placeholder=\"Add a Todo\"\r\n            ref={inputRef}\r\n          />\r\n             \r\n          <button type=\"submit\" className=\"addButton\"><GrFormAdd/></button>\r\n          </> )\r\n            }\r\n\r\n        \r\n      </form>\r\n    )\r\n}\r\n\r\nexport default TodoForm\r\n","import React, {useState} from 'react'\r\nimport TodoForm from './TodoForm'\r\nimport { FaPen } from 'react-icons/fa'\r\nimport { FiTrash2 } from 'react-icons/fi'\r\n\r\n// import TodoList from './TodoList'\r\n\r\nfunction Todo({todos, completeTodo, removeTodo, updateTodo}) {\r\n    const [edit, setEdit] = useState({\r\n        id: null,\r\n        value: ''\r\n    })\r\n    const submitUpdate = value =>  {\r\n        updateTodo(edit.id, value)\r\n        setEdit ({\r\n            id: null,\r\n            value: ''\r\n        })\r\n    }\r\n\r\n    if (edit.id) {\r\n        return <TodoForm edit={edit} onSubmit={submitUpdate}/>\r\n    }\r\n\r\n\r\n\r\n    return todos.map((todo, index) => (\r\n     <div className={todo.isComplete ? 'todo-complete' : 'not-complete'} key = {index} style={{\r\n         display: \"flex\",\r\n         alignItems: \"center\",\r\n         cursor:\"pointer\"\r\n\r\n     }}>  \r\n     \r\n        <div key ={todo.id} onClick = {() => completeTodo(todo.id)}\r\n        style = {{padding: \"1rem\"}}\r\n        >\r\n            {todo.text}\r\n            \r\n        </div>\r\n         <button className=\"editButton\" style={{margin: \"0 1rem\"}} onClick={() => setEdit({id: todo.id, value: todo.text})}><FaPen style={{ fontSize: \"1.4rem\", color: \"grey\"}}/></button>\r\n\r\n            <button className=\"removeButton\" style={{margin: \"0 1rem\"}} onClick={() => removeTodo(todo.id)}><FiTrash2 style ={{fontSize: \"1.4rem\",color: \"grey\"}}/></button>\r\n        \r\n     </div>\r\n    ))\r\n}\r\n\r\nexport default Todo\r\n","import React, { useState } from 'react'\r\nimport Todo from './Todo';\r\nimport TodoForm from './TodoForm'\r\n\r\nfunction TodoList() {\r\n\r\n    const[todos, setTodos] = useState([]);\r\n\r\n    const addTodo = todo => {\r\n        if (!todo.text || /^\\s*$/.test(todo.text)) {\r\n            return;\r\n        }\r\n        const newTodos = [todo, ...todos]\r\n\r\n        setTodos(newTodos);\r\n    };\r\n\r\n\r\n    const updateTodo = (todoId, newValue) => {\r\n        if (!newValue.text || /^\\s*$/.test(newValue.text)) {\r\n            return;\r\n        }\r\n        setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)))\r\n    }\r\n\r\n\r\n    const removeTodo = id => {\r\n        const removeArr = [...todos].filter(todo => todo.id !== id)\r\n        setTodos(removeArr);\r\n    }\r\n\r\n    \r\n\r\n    const completeTodo = id => {\r\n        let updatedTodos = todos.map(todo => {\r\n            if (todo.id === id) {\r\n                todo.isComplete = !todo.isComplete\r\n            }\r\n            return todo;\r\n        })\r\n        setTodos(updatedTodos);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <TodoForm onSubmit = {addTodo}/>\r\n            <Todo\r\n            todos={todos}\r\n            completeTodo={completeTodo}\r\n            removeTodo={removeTodo}\r\n            updateTodo={updateTodo}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList\r\n","import React from 'react';\nimport './App.css';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n\n  return (\n    \n    <header>\n    <div className=\"todo\">\n      <div className=\"todo__head\">\n         <p>MY TODOS</p>\n         <h1>What's the plan for today</h1>\n      </div>\n         <br/>\n         <br/>\n         <TodoList/>\n  \n    </div>\n\n    </header>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}